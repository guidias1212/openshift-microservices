{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NotesList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst axios = require('axios');\n\nconst getNotesFromServer = () => {\n  axios.get('http://gateway-sandbox.apps.ca-central-1.starter.openshift-online.com/gateway/getNotes').then(response => {\n    var note;\n\n    for (note of response.data.notes) {\n      console.log(typeof note);\n      return note;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst NotesList = () => {\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, getNotesFromServer()), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default NotesList;","map":{"version":3,"sources":["/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NotesList.js"],"names":["axios","require","getNotesFromServer","get","then","response","note","data","notes","console","log","catch","error","NotesList"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7BF,EAAAA,KAAK,CAACG,GAAN,CAAU,wFAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,QAAIC,IAAJ;;AACA,SAAKA,IAAL,IAAaD,QAAQ,CAACE,IAAT,CAAcC,KAA3B,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,IAAnB;AACA,aAAOA,IAAP;AACH;AACJ,GAPD,EAQCK,KARD,CAQOC,KAAK,IAAI;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GAVD;AAWH,CAZD;;AAeA,MAAMC,SAAS,GAAG,MAAM;AACpB,SACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,kBAAkB,EAAtB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ;AAMD,CAPH;;AASE,eAAeW,SAAf","sourcesContent":["const axios = require('axios');\n\nconst getNotesFromServer = () => {\n    axios.get('http://gateway-sandbox.apps.ca-central-1.starter.openshift-online.com/gateway/getNotes')\n    .then(response => {\n        var note;\n        for (note of response.data.notes) {\n            console.log(typeof(note));\n            return note;\n        }\n    })\n    .catch(error => {\n        console.log(error);\n    })\n}\n\n\nconst NotesList = () => {\n    return (\n        <>\n        <p>{getNotesFromServer()}</p>\n        <br/>\n        </>\n    )\n  }\n  \n  export default NotesList\n"]},"metadata":{},"sourceType":"module"}