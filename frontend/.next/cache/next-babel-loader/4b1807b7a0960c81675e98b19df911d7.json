{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NotesList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst axios = require('axios');\n\nconst getNotesFromServer = () => {\n  axios.get('http://gateway-sandbox.apps.ca-central-1.starter.openshift-online.com/gateway/getNotes').then(response => {\n    console.log(response.data.notes[0]);\n    var note;\n    var notesList;\n\n    for (note of response.data.notes) {\n      notesList += __jsx(React.Fragment, null, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 29\n        }\n      }, \"note\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 40\n        }\n      }));\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n  return notesList;\n};\n\nexport default getNotesFromServer;","map":{"version":3,"sources":["/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NotesList.js"],"names":["axios","require","getNotesFromServer","get","then","response","console","log","data","notes","note","notesList","catch","error"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7BF,EAAAA,KAAK,CAACG,GAAN,CAAU,wFAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAZ;AACA,QAAIC,IAAJ;AACA,QAAIC,SAAJ;;AACA,SAAKD,IAAL,IAAaL,QAAQ,CAACG,IAAT,CAAcC,KAA3B,EAAkC;AAC7BE,MAAAA,SAAS,IAAI,4BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAF,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAAb;AACJ;AACJ,GARD,EASCC,KATD,CASOC,KAAK,IAAI;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,GAXD;AAYA,SAAOF,SAAP;AACH,CAdD;;AAgBE,eAAeT,kBAAf","sourcesContent":["const axios = require('axios');\n\nconst getNotesFromServer = () => {\n    axios.get('http://gateway-sandbox.apps.ca-central-1.starter.openshift-online.com/gateway/getNotes')\n    .then(response => {\n        console.log(response.data.notes[0]);\n        var note;\n        var notesList;\n        for (note of response.data.notes) {\n             notesList += <><p>note</p><br/></>;\n        }\n    })\n    .catch(error => {\n        console.log(error);\n    })\n    return notesList;\n}\n  \n  export default getNotesFromServer\n"]},"metadata":{},"sourceType":"module"}