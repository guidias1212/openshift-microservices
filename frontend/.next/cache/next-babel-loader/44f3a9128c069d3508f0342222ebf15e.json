{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NameForm/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nconst NameForm = props => {\n  const {\n    0: setText,\n    1: getText\n  } = useState();\n  useEffect(() => {}, []);\n\n  const handleChange = e => {\n    setText(e.target.value);\n    console.log('asd');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.nomeRecebido), __jsx(\"input\", {\n    type: \"text\",\n    value: getText,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, getText));\n};\n\nexport default NameForm;","map":{"version":3,"sources":["/home/guilherme/Public/RedHat/openshift-microservices/frontend/components/NameForm/index.js"],"names":["useState","useEffect","NameForm","props","setText","getText","handleChange","e","target","value","console","log","nomeRecebido"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAqBL,QAAQ,EAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAHD;;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,KAAK,CAACS,YAAV,CADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEP,OAA1B;AAAmC,IAAA,QAAQ,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,OAAJ,CALF,CADF;AASD,CAtBD;;AAyBA,eAAeH,QAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nconst NameForm = (props) => {\n\n  const [setText, getText] = useState()\n\n  useEffect(() => {\n\n  }, [])\n\n  const handleChange = (e) => {\n    setText(e.target.value)\n    console.log('asd')\n  }\n\n  return (\n    <>\n      <p>{props.nomeRecebido}</p>\n      <input type='text' value={getText} onChange={handleChange}>\n\n      </input>\n      <p>{getText}</p>\n    </>\n  )\n}\n\n\nexport default NameForm"]},"metadata":{},"sourceType":"module"}